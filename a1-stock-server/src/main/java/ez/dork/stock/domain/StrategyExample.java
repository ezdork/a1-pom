package ez.dork.stock.domain;

import java.util.ArrayList;
import java.util.List;

public class StrategyExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table strategy
	 * @mbggenerated  Fri Dec 06 23:23:50 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table strategy
	 * @mbggenerated  Fri Dec 06 23:23:50 CST 2013
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table strategy
	 * @mbggenerated  Fri Dec 06 23:23:50 CST 2013
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table strategy
	 * @mbggenerated  Fri Dec 06 23:23:50 CST 2013
	 */
	public StrategyExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table strategy
	 * @mbggenerated  Fri Dec 06 23:23:50 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table strategy
	 * @mbggenerated  Fri Dec 06 23:23:50 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table strategy
	 * @mbggenerated  Fri Dec 06 23:23:50 CST 2013
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table strategy
	 * @mbggenerated  Fri Dec 06 23:23:50 CST 2013
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table strategy
	 * @mbggenerated  Fri Dec 06 23:23:50 CST 2013
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table strategy
	 * @mbggenerated  Fri Dec 06 23:23:50 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table strategy
	 * @mbggenerated  Fri Dec 06 23:23:50 CST 2013
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table strategy
	 * @mbggenerated  Fri Dec 06 23:23:50 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table strategy
	 * @mbggenerated  Fri Dec 06 23:23:50 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table strategy
	 * @mbggenerated  Fri Dec 06 23:23:50 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table strategy
	 * @mbggenerated  Fri Dec 06 23:23:50 CST 2013
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andCodeIsNull() {
			addCriterion("code is null");
			return (Criteria) this;
		}

		public Criteria andCodeIsNotNull() {
			addCriterion("code is not null");
			return (Criteria) this;
		}

		public Criteria andCodeEqualTo(String value) {
			addCriterion("code =", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeNotEqualTo(String value) {
			addCriterion("code <>", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeGreaterThan(String value) {
			addCriterion("code >", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeGreaterThanOrEqualTo(String value) {
			addCriterion("code >=", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeLessThan(String value) {
			addCriterion("code <", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeLessThanOrEqualTo(String value) {
			addCriterion("code <=", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeLike(String value) {
			addCriterion("code like", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeNotLike(String value) {
			addCriterion("code not like", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeIn(List<String> values) {
			addCriterion("code in", values, "code");
			return (Criteria) this;
		}

		public Criteria andCodeNotIn(List<String> values) {
			addCriterion("code not in", values, "code");
			return (Criteria) this;
		}

		public Criteria andCodeBetween(String value1, String value2) {
			addCriterion("code between", value1, value2, "code");
			return (Criteria) this;
		}

		public Criteria andCodeNotBetween(String value1, String value2) {
			addCriterion("code not between", value1, value2, "code");
			return (Criteria) this;
		}

		public Criteria andBuyDateIsNull() {
			addCriterion("buy_date is null");
			return (Criteria) this;
		}

		public Criteria andBuyDateIsNotNull() {
			addCriterion("buy_date is not null");
			return (Criteria) this;
		}

		public Criteria andBuyDateEqualTo(String value) {
			addCriterion("buy_date =", value, "buyDate");
			return (Criteria) this;
		}

		public Criteria andBuyDateNotEqualTo(String value) {
			addCriterion("buy_date <>", value, "buyDate");
			return (Criteria) this;
		}

		public Criteria andBuyDateGreaterThan(String value) {
			addCriterion("buy_date >", value, "buyDate");
			return (Criteria) this;
		}

		public Criteria andBuyDateGreaterThanOrEqualTo(String value) {
			addCriterion("buy_date >=", value, "buyDate");
			return (Criteria) this;
		}

		public Criteria andBuyDateLessThan(String value) {
			addCriterion("buy_date <", value, "buyDate");
			return (Criteria) this;
		}

		public Criteria andBuyDateLessThanOrEqualTo(String value) {
			addCriterion("buy_date <=", value, "buyDate");
			return (Criteria) this;
		}

		public Criteria andBuyDateLike(String value) {
			addCriterion("buy_date like", value, "buyDate");
			return (Criteria) this;
		}

		public Criteria andBuyDateNotLike(String value) {
			addCriterion("buy_date not like", value, "buyDate");
			return (Criteria) this;
		}

		public Criteria andBuyDateIn(List<String> values) {
			addCriterion("buy_date in", values, "buyDate");
			return (Criteria) this;
		}

		public Criteria andBuyDateNotIn(List<String> values) {
			addCriterion("buy_date not in", values, "buyDate");
			return (Criteria) this;
		}

		public Criteria andBuyDateBetween(String value1, String value2) {
			addCriterion("buy_date between", value1, value2, "buyDate");
			return (Criteria) this;
		}

		public Criteria andBuyDateNotBetween(String value1, String value2) {
			addCriterion("buy_date not between", value1, value2, "buyDate");
			return (Criteria) this;
		}

		public Criteria andBuyPriceIsNull() {
			addCriterion("buy_price is null");
			return (Criteria) this;
		}

		public Criteria andBuyPriceIsNotNull() {
			addCriterion("buy_price is not null");
			return (Criteria) this;
		}

		public Criteria andBuyPriceEqualTo(Double value) {
			addCriterion("buy_price =", value, "buyPrice");
			return (Criteria) this;
		}

		public Criteria andBuyPriceNotEqualTo(Double value) {
			addCriterion("buy_price <>", value, "buyPrice");
			return (Criteria) this;
		}

		public Criteria andBuyPriceGreaterThan(Double value) {
			addCriterion("buy_price >", value, "buyPrice");
			return (Criteria) this;
		}

		public Criteria andBuyPriceGreaterThanOrEqualTo(Double value) {
			addCriterion("buy_price >=", value, "buyPrice");
			return (Criteria) this;
		}

		public Criteria andBuyPriceLessThan(Double value) {
			addCriterion("buy_price <", value, "buyPrice");
			return (Criteria) this;
		}

		public Criteria andBuyPriceLessThanOrEqualTo(Double value) {
			addCriterion("buy_price <=", value, "buyPrice");
			return (Criteria) this;
		}

		public Criteria andBuyPriceIn(List<Double> values) {
			addCriterion("buy_price in", values, "buyPrice");
			return (Criteria) this;
		}

		public Criteria andBuyPriceNotIn(List<Double> values) {
			addCriterion("buy_price not in", values, "buyPrice");
			return (Criteria) this;
		}

		public Criteria andBuyPriceBetween(Double value1, Double value2) {
			addCriterion("buy_price between", value1, value2, "buyPrice");
			return (Criteria) this;
		}

		public Criteria andBuyPriceNotBetween(Double value1, Double value2) {
			addCriterion("buy_price not between", value1, value2, "buyPrice");
			return (Criteria) this;
		}

		public Criteria andBuyAmountIsNull() {
			addCriterion("buy_amount is null");
			return (Criteria) this;
		}

		public Criteria andBuyAmountIsNotNull() {
			addCriterion("buy_amount is not null");
			return (Criteria) this;
		}

		public Criteria andBuyAmountEqualTo(Integer value) {
			addCriterion("buy_amount =", value, "buyAmount");
			return (Criteria) this;
		}

		public Criteria andBuyAmountNotEqualTo(Integer value) {
			addCriterion("buy_amount <>", value, "buyAmount");
			return (Criteria) this;
		}

		public Criteria andBuyAmountGreaterThan(Integer value) {
			addCriterion("buy_amount >", value, "buyAmount");
			return (Criteria) this;
		}

		public Criteria andBuyAmountGreaterThanOrEqualTo(Integer value) {
			addCriterion("buy_amount >=", value, "buyAmount");
			return (Criteria) this;
		}

		public Criteria andBuyAmountLessThan(Integer value) {
			addCriterion("buy_amount <", value, "buyAmount");
			return (Criteria) this;
		}

		public Criteria andBuyAmountLessThanOrEqualTo(Integer value) {
			addCriterion("buy_amount <=", value, "buyAmount");
			return (Criteria) this;
		}

		public Criteria andBuyAmountIn(List<Integer> values) {
			addCriterion("buy_amount in", values, "buyAmount");
			return (Criteria) this;
		}

		public Criteria andBuyAmountNotIn(List<Integer> values) {
			addCriterion("buy_amount not in", values, "buyAmount");
			return (Criteria) this;
		}

		public Criteria andBuyAmountBetween(Integer value1, Integer value2) {
			addCriterion("buy_amount between", value1, value2, "buyAmount");
			return (Criteria) this;
		}

		public Criteria andBuyAmountNotBetween(Integer value1, Integer value2) {
			addCriterion("buy_amount not between", value1, value2, "buyAmount");
			return (Criteria) this;
		}

		public Criteria andSellDateIsNull() {
			addCriterion("sell_date is null");
			return (Criteria) this;
		}

		public Criteria andSellDateIsNotNull() {
			addCriterion("sell_date is not null");
			return (Criteria) this;
		}

		public Criteria andSellDateEqualTo(String value) {
			addCriterion("sell_date =", value, "sellDate");
			return (Criteria) this;
		}

		public Criteria andSellDateNotEqualTo(String value) {
			addCriterion("sell_date <>", value, "sellDate");
			return (Criteria) this;
		}

		public Criteria andSellDateGreaterThan(String value) {
			addCriterion("sell_date >", value, "sellDate");
			return (Criteria) this;
		}

		public Criteria andSellDateGreaterThanOrEqualTo(String value) {
			addCriterion("sell_date >=", value, "sellDate");
			return (Criteria) this;
		}

		public Criteria andSellDateLessThan(String value) {
			addCriterion("sell_date <", value, "sellDate");
			return (Criteria) this;
		}

		public Criteria andSellDateLessThanOrEqualTo(String value) {
			addCriterion("sell_date <=", value, "sellDate");
			return (Criteria) this;
		}

		public Criteria andSellDateLike(String value) {
			addCriterion("sell_date like", value, "sellDate");
			return (Criteria) this;
		}

		public Criteria andSellDateNotLike(String value) {
			addCriterion("sell_date not like", value, "sellDate");
			return (Criteria) this;
		}

		public Criteria andSellDateIn(List<String> values) {
			addCriterion("sell_date in", values, "sellDate");
			return (Criteria) this;
		}

		public Criteria andSellDateNotIn(List<String> values) {
			addCriterion("sell_date not in", values, "sellDate");
			return (Criteria) this;
		}

		public Criteria andSellDateBetween(String value1, String value2) {
			addCriterion("sell_date between", value1, value2, "sellDate");
			return (Criteria) this;
		}

		public Criteria andSellDateNotBetween(String value1, String value2) {
			addCriterion("sell_date not between", value1, value2, "sellDate");
			return (Criteria) this;
		}

		public Criteria andSellPriceIsNull() {
			addCriterion("sell_price is null");
			return (Criteria) this;
		}

		public Criteria andSellPriceIsNotNull() {
			addCriterion("sell_price is not null");
			return (Criteria) this;
		}

		public Criteria andSellPriceEqualTo(Double value) {
			addCriterion("sell_price =", value, "sellPrice");
			return (Criteria) this;
		}

		public Criteria andSellPriceNotEqualTo(Double value) {
			addCriterion("sell_price <>", value, "sellPrice");
			return (Criteria) this;
		}

		public Criteria andSellPriceGreaterThan(Double value) {
			addCriterion("sell_price >", value, "sellPrice");
			return (Criteria) this;
		}

		public Criteria andSellPriceGreaterThanOrEqualTo(Double value) {
			addCriterion("sell_price >=", value, "sellPrice");
			return (Criteria) this;
		}

		public Criteria andSellPriceLessThan(Double value) {
			addCriterion("sell_price <", value, "sellPrice");
			return (Criteria) this;
		}

		public Criteria andSellPriceLessThanOrEqualTo(Double value) {
			addCriterion("sell_price <=", value, "sellPrice");
			return (Criteria) this;
		}

		public Criteria andSellPriceIn(List<Double> values) {
			addCriterion("sell_price in", values, "sellPrice");
			return (Criteria) this;
		}

		public Criteria andSellPriceNotIn(List<Double> values) {
			addCriterion("sell_price not in", values, "sellPrice");
			return (Criteria) this;
		}

		public Criteria andSellPriceBetween(Double value1, Double value2) {
			addCriterion("sell_price between", value1, value2, "sellPrice");
			return (Criteria) this;
		}

		public Criteria andSellPriceNotBetween(Double value1, Double value2) {
			addCriterion("sell_price not between", value1, value2, "sellPrice");
			return (Criteria) this;
		}

		public Criteria andSellAmountIsNull() {
			addCriterion("sell_amount is null");
			return (Criteria) this;
		}

		public Criteria andSellAmountIsNotNull() {
			addCriterion("sell_amount is not null");
			return (Criteria) this;
		}

		public Criteria andSellAmountEqualTo(Integer value) {
			addCriterion("sell_amount =", value, "sellAmount");
			return (Criteria) this;
		}

		public Criteria andSellAmountNotEqualTo(Integer value) {
			addCriterion("sell_amount <>", value, "sellAmount");
			return (Criteria) this;
		}

		public Criteria andSellAmountGreaterThan(Integer value) {
			addCriterion("sell_amount >", value, "sellAmount");
			return (Criteria) this;
		}

		public Criteria andSellAmountGreaterThanOrEqualTo(Integer value) {
			addCriterion("sell_amount >=", value, "sellAmount");
			return (Criteria) this;
		}

		public Criteria andSellAmountLessThan(Integer value) {
			addCriterion("sell_amount <", value, "sellAmount");
			return (Criteria) this;
		}

		public Criteria andSellAmountLessThanOrEqualTo(Integer value) {
			addCriterion("sell_amount <=", value, "sellAmount");
			return (Criteria) this;
		}

		public Criteria andSellAmountIn(List<Integer> values) {
			addCriterion("sell_amount in", values, "sellAmount");
			return (Criteria) this;
		}

		public Criteria andSellAmountNotIn(List<Integer> values) {
			addCriterion("sell_amount not in", values, "sellAmount");
			return (Criteria) this;
		}

		public Criteria andSellAmountBetween(Integer value1, Integer value2) {
			addCriterion("sell_amount between", value1, value2, "sellAmount");
			return (Criteria) this;
		}

		public Criteria andSellAmountNotBetween(Integer value1, Integer value2) {
			addCriterion("sell_amount not between", value1, value2, "sellAmount");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table strategy
	 * @mbggenerated  Fri Dec 06 23:23:50 CST 2013
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table strategy
     *
     * @mbggenerated do_not_delete_during_merge Sun Nov 17 11:56:09 CST 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}