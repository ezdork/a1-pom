<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ez.dork.stock.mapper.StockMapper">
	<resultMap id="BaseResultMap" type="ez.dork.stock.domain.Stock">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sun Nov 17 
			11:56:09 CST 2013. -->
		<id column="code" jdbcType="CHAR" property="code" />
		<id column="date" jdbcType="CHAR" property="date" />
		<result column="open" jdbcType="DOUBLE" property="open" />
		<result column="high" jdbcType="DOUBLE" property="high" />
		<result column="low" jdbcType="DOUBLE" property="low" />
		<result column="close" jdbcType="DOUBLE" property="close" />
		<result column="volumn" jdbcType="INTEGER" property="volumn" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sun Nov 17 
			11:56:09 CST 2013. -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sun Nov 17 
			11:56:09 CST 2013. -->
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sun Nov 17 
			11:56:09 CST 2013. -->
		code, date, open, high, low, close, volumn
	</sql>
	<select id="selectByExample" parameterType="ez.dork.stock.domain.StockExample"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sun Nov 17 
			11:56:09 CST 2013. -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from stock
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="ez.dork.stock.domain.StockKey"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sun Nov 17 
			11:56:09 CST 2013. -->
		select
		<include refid="Base_Column_List" />
		from stock
		where code = #{code,jdbcType=CHAR}
		and date = #{date,jdbcType=CHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="ez.dork.stock.domain.StockKey">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sun Nov 17 
			11:56:09 CST 2013. -->
		delete from stock
		where code = #{code,jdbcType=CHAR}
		and date = #{date,jdbcType=CHAR}
	</delete>
	<delete id="deleteByExample" parameterType="ez.dork.stock.domain.StockExample">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sun Nov 17 
			11:56:09 CST 2013. -->
		delete from stock
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="ez.dork.stock.domain.Stock">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sun Nov 17 
			11:56:09 CST 2013. -->
		insert into stock (code, date, open, high,
		low, close, volumn)
		values (#{code,jdbcType=CHAR}, #{date,jdbcType=CHAR},
		#{open,jdbcType=DOUBLE}, #{high,jdbcType=DOUBLE},
		#{low,jdbcType=DOUBLE}, #{close,jdbcType=DOUBLE},
		#{volumn,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="ez.dork.stock.domain.Stock">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sun Nov 17 
			11:56:09 CST 2013. -->
		insert into stock
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="code != null">
				code,
			</if>
			<if test="date != null">
				date,
			</if>
			<if test="open != null">
				open,
			</if>
			<if test="high != null">
				high,
			</if>
			<if test="low != null">
				low,
			</if>
			<if test="close != null">
				close,
			</if>
			<if test="volumn != null">
				volumn,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="code != null">
				#{code,jdbcType=CHAR},
			</if>
			<if test="date != null">
				#{date,jdbcType=CHAR},
			</if>
			<if test="open != null">
				#{open,jdbcType=DOUBLE},
			</if>
			<if test="high != null">
				#{high,jdbcType=DOUBLE},
			</if>
			<if test="low != null">
				#{low,jdbcType=DOUBLE},
			</if>
			<if test="close != null">
				#{close,jdbcType=DOUBLE},
			</if>
			<if test="volumn != null">
				#{volumn,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="ez.dork.stock.domain.StockExample"
		resultType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sun Nov 17 
			11:56:09 CST 2013. -->
		select count(*) from stock
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sun Nov 17 
			11:56:09 CST 2013. -->
		update stock
		<set>
			<if test="record.code != null">
				code = #{record.code,jdbcType=CHAR},
			</if>
			<if test="record.date != null">
				date = #{record.date,jdbcType=CHAR},
			</if>
			<if test="record.open != null">
				open = #{record.open,jdbcType=DOUBLE},
			</if>
			<if test="record.high != null">
				high = #{record.high,jdbcType=DOUBLE},
			</if>
			<if test="record.low != null">
				low = #{record.low,jdbcType=DOUBLE},
			</if>
			<if test="record.close != null">
				close = #{record.close,jdbcType=DOUBLE},
			</if>
			<if test="record.volumn != null">
				volumn = #{record.volumn,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sun Nov 17 
			11:56:09 CST 2013. -->
		update stock
		set code = #{record.code,jdbcType=CHAR},
		date = #{record.date,jdbcType=CHAR},
		open = #{record.open,jdbcType=DOUBLE},
		high = #{record.high,jdbcType=DOUBLE},
		low = #{record.low,jdbcType=DOUBLE},
		close = #{record.close,jdbcType=DOUBLE},
		volumn = #{record.volumn,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="ez.dork.stock.domain.Stock">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sun Nov 17 
			11:56:09 CST 2013. -->
		update stock
		<set>
			<if test="open != null">
				open = #{open,jdbcType=DOUBLE},
			</if>
			<if test="high != null">
				high = #{high,jdbcType=DOUBLE},
			</if>
			<if test="low != null">
				low = #{low,jdbcType=DOUBLE},
			</if>
			<if test="close != null">
				close = #{close,jdbcType=DOUBLE},
			</if>
			<if test="volumn != null">
				volumn = #{volumn,jdbcType=INTEGER},
			</if>
		</set>
		where code = #{code,jdbcType=CHAR}
		and date = #{date,jdbcType=CHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="ez.dork.stock.domain.Stock">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sun Nov 17 
			11:56:09 CST 2013. -->
		update stock
		set open = #{open,jdbcType=DOUBLE},
		high = #{high,jdbcType=DOUBLE},
		low = #{low,jdbcType=DOUBLE},
		close = #{close,jdbcType=DOUBLE},
		volumn = #{volumn,jdbcType=INTEGER}
		where code = #{code,jdbcType=CHAR}
		and date = #{date,jdbcType=CHAR}
	</update>

	<select id="selectHighestStockList" resultMap="BaseResultMap">
		select T2.* from
		(select code,max(close) high from stock
		<if test="beginDate != null">
			where date between #{beginDate} and #{endDate}
		</if>
		group by code) T1,
		(select * from stock where date = #{endDate}) T2
		where T1.code = T2.code
		and T1.high between T2.close and T2.close*1.07
		and T1.high != T2.close
		and length(T2.code) = 4
		order by T2.code;
	</select>

	<select id="selectByCode" resultMap="BaseResultMap">
		select * from stock where
		code = #{code} order by date;
	</select>

	<select id="selectGroupByCode" resultType="java.lang.String">
		select code from stock
		group by code;
	</select>
	<select id="getHighestPrice" resultType="java.lang.Double">
		select max(high) high
		from stock
		where code = #{code}
		and date between #{beginDate} and
		#{endDate};
	</select>

	<select id="getLatestStockDate" resultType="java.lang.String">
		select max(date) date
		from stock;
	</select>

</mapper>