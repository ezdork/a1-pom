<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ez.dork.stock.mapper.StrategyMapper">
  <resultMap id="BaseResultMap" type="ez.dork.stock.domain.Strategy">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Nov 17 11:56:09 CST 2013.
    -->
    <id column="code" jdbcType="CHAR" property="code" />
    <id column="buy_date" jdbcType="CHAR" property="buyDate" />
    <result column="buy_price" jdbcType="DOUBLE" property="buyPrice" />
    <result column="buy_amount" jdbcType="INTEGER" property="buyAmount" />
    <result column="sell_date" jdbcType="CHAR" property="sellDate" />
    <result column="sell_price" jdbcType="DOUBLE" property="sellPrice" />
    <result column="sell_amount" jdbcType="INTEGER" property="sellAmount" />
  </resultMap>
  
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Nov 17 11:56:09 CST 2013.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Nov 17 11:56:09 CST 2013.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Nov 17 11:56:09 CST 2013.
    -->
    code, buy_date, buy_price, buy_amount, sell_date, sell_price, sell_amount
  </sql>
  <select id="selectByExample" parameterType="ez.dork.stock.domain.StrategyExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Nov 17 11:56:09 CST 2013.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from strategy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="ez.dork.stock.domain.StrategyKey" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Nov 17 11:56:09 CST 2013.
    -->
    select 
    <include refid="Base_Column_List" />
    from strategy
    where code = #{code,jdbcType=CHAR}
      and buy_date = #{buyDate,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="ez.dork.stock.domain.StrategyKey">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Nov 17 11:56:09 CST 2013.
    -->
    delete from strategy
    where code = #{code,jdbcType=CHAR}
      and buy_date = #{buyDate,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="ez.dork.stock.domain.StrategyExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Nov 17 11:56:09 CST 2013.
    -->
    delete from strategy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="ez.dork.stock.domain.Strategy">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Nov 17 11:56:09 CST 2013.
    -->
    insert into strategy (code, buy_date, buy_price, 
      buy_amount, sell_date, sell_price, 
      sell_amount)
    values (#{code,jdbcType=CHAR}, #{buyDate,jdbcType=CHAR}, #{buyPrice,jdbcType=DOUBLE}, 
      #{buyAmount,jdbcType=INTEGER}, #{sellDate,jdbcType=CHAR}, #{sellPrice,jdbcType=DOUBLE}, 
      #{sellAmount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="ez.dork.stock.domain.Strategy">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Nov 17 11:56:09 CST 2013.
    -->
    insert into strategy
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="code != null">
        code,
      </if>
      <if test="buyDate != null">
        buy_date,
      </if>
      <if test="buyPrice != null">
        buy_price,
      </if>
      <if test="buyAmount != null">
        buy_amount,
      </if>
      <if test="sellDate != null">
        sell_date,
      </if>
      <if test="sellPrice != null">
        sell_price,
      </if>
      <if test="sellAmount != null">
        sell_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="code != null">
        #{code,jdbcType=CHAR},
      </if>
      <if test="buyDate != null">
        #{buyDate,jdbcType=CHAR},
      </if>
      <if test="buyPrice != null">
        #{buyPrice,jdbcType=DOUBLE},
      </if>
      <if test="buyAmount != null">
        #{buyAmount,jdbcType=INTEGER},
      </if>
      <if test="sellDate != null">
        #{sellDate,jdbcType=CHAR},
      </if>
      <if test="sellPrice != null">
        #{sellPrice,jdbcType=DOUBLE},
      </if>
      <if test="sellAmount != null">
        #{sellAmount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ez.dork.stock.domain.StrategyExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Nov 17 11:56:09 CST 2013.
    -->
    select count(*) from strategy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Nov 17 11:56:09 CST 2013.
    -->
    update strategy
    <set>
      <if test="record.code != null">
        code = #{record.code,jdbcType=CHAR},
      </if>
      <if test="record.buyDate != null">
        buy_date = #{record.buyDate,jdbcType=CHAR},
      </if>
      <if test="record.buyPrice != null">
        buy_price = #{record.buyPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.buyAmount != null">
        buy_amount = #{record.buyAmount,jdbcType=INTEGER},
      </if>
      <if test="record.sellDate != null">
        sell_date = #{record.sellDate,jdbcType=CHAR},
      </if>
      <if test="record.sellPrice != null">
        sell_price = #{record.sellPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.sellAmount != null">
        sell_amount = #{record.sellAmount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Nov 17 11:56:09 CST 2013.
    -->
    update strategy
    set code = #{record.code,jdbcType=CHAR},
      buy_date = #{record.buyDate,jdbcType=CHAR},
      buy_price = #{record.buyPrice,jdbcType=DOUBLE},
      buy_amount = #{record.buyAmount,jdbcType=INTEGER},
      sell_date = #{record.sellDate,jdbcType=CHAR},
      sell_price = #{record.sellPrice,jdbcType=DOUBLE},
      sell_amount = #{record.sellAmount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="ez.dork.stock.domain.Strategy">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Nov 17 11:56:09 CST 2013.
    -->
    update strategy
    <set>
      <if test="buyPrice != null">
        buy_price = #{buyPrice,jdbcType=DOUBLE},
      </if>
      <if test="buyAmount != null">
        buy_amount = #{buyAmount,jdbcType=INTEGER},
      </if>
      <if test="sellDate != null">
        sell_date = #{sellDate,jdbcType=CHAR},
      </if>
      <if test="sellPrice != null">
        sell_price = #{sellPrice,jdbcType=DOUBLE},
      </if>
      <if test="sellAmount != null">
        sell_amount = #{sellAmount,jdbcType=INTEGER},
      </if>
    </set>
    where code = #{code,jdbcType=CHAR}
      and buy_date = #{buyDate,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="ez.dork.stock.domain.Strategy">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Nov 17 11:56:09 CST 2013.
    -->
    update strategy
    set buy_price = #{buyPrice,jdbcType=DOUBLE},
      buy_amount = #{buyAmount,jdbcType=INTEGER},
      sell_date = #{sellDate,jdbcType=CHAR},
      sell_price = #{sellPrice,jdbcType=DOUBLE},
      sell_amount = #{sellAmount,jdbcType=INTEGER}
    where code = #{code,jdbcType=CHAR}
      and buy_date = #{buyDate,jdbcType=CHAR}
  </update>


	<resultMap id="EarnMoneyResultMap" type="ez.dork.stock.domain.EarnMoney">
		<id column="code" jdbcType="CHAR" property="code" />
		<id column="earn_money" jdbcType="CHAR" property="earnMoney" />
		<result column="fee" jdbcType="DOUBLE" property="fee" />
	</resultMap>

	<select id="getStrategyList" resultMap="BaseResultMap">
		select * from strategy
		where code = #{code} order by buy_date;
	</select>

	<select id="getAllStockOrderByEarnMoney" resultMap="EarnMoneyResultMap">
		select code,
		sum(((buy_amount * sell_price) - (sell_amount * buy_price)) * 1000) earn_money,
		(sum(buy_amount * buy_price * 1.425) + sum(sell_amount * sell_price * 4.425)) fee
		from strategy where length(code) = 4
		and code != '1808'
		group by code order by earn_money;
	</select>

	<update id="truncate">
		truncate table strategy;
	</update>

</mapper>